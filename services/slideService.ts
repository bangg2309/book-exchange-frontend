import { Slide } from "@/types/silde";

export const slideService = {
    // L·∫•y ch·ªâ imageUrl (d√πng cho trang Home)
    getSlide: async (): Promise<string[]> => {
        try {
            const response = await fetch('http://localhost:8081/slides');
            const data = await response.json();
            console.log('üì¶ D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API:', data);
            const urls = data.result.map((item: { imageUrl: string }) => item.imageUrl);
            return urls;
        } catch (error) {
            console.error('‚ùå L·ªói khi fetch slide:', error);
            return [];
        }
    },

    // L·∫•y to√†n b·ªô ƒë·ªëi t∆∞·ª£ng slide (d√πng cho trang qu·∫£n l√Ω slide)
    getSlidesFull: async (): Promise<Slide[]> => {
        try {
            const response = await fetch('http://localhost:8081/slides');
            const data = await response.json();
            console.log('üì¶ D·ªØ li·ªáu slide full tr·∫£ v·ªÅ t·ª´ API:', data);
            return data.result as Slide[];
        } catch (error) {
            console.error('‚ùå L·ªói khi fetch slide full:', error);
            return [];
        }
    },

    // ‚úÖ Th√™m h√†m x√≥a slide
    deleteSlide: async (id: string): Promise<void> => {
        try {
            const response = await fetch(`http://localhost:8081/slides/${id}`, {
                method: 'DELETE',
            });
            if (!response.ok) {
                throw new Error(`X√≥a th·∫•t b·∫°i v·ªõi m√£ l·ªói ${response.status}`);
            }
        } catch (error) {
            console.error('‚ùå L·ªói khi x√≥a slide:', error);
            throw error;
        }
    }
};
